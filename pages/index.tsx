import type { NextPage } from 'next'
import Head from 'next/head'
import Layout from '../components/layout'
import MovieList from '../components/MovieList'
import type { HomePageProps } from '../types'

const Home: NextPage<HomePageProps> = ({ imageConfig }) => {
  const posterImageBaseURL = `${imageConfig.base_url}${imageConfig.poster_sizes[0]}`;
  const dateTo = new Date();
  const dateFrom = new Date();
  dateFrom.setDate(dateFrom.getDate() - 7);
  const dateRange = `${dateFrom.getMonth() + 1}/${dateFrom.getDate()}/${dateFrom.getFullYear()} - ${dateTo.getMonth() + 1}/${dateTo.getDate()}/${dateTo.getFullYear()}`
  return (
    <div>
      <Head>
        <title>Tivix Fullstack Movie Database</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="md:flex items-center justify-between mb-4">
          <h3 className="font-bold text-xl text-center md:text-left md:text-2xl">Trending Movies for {dateRange}</h3>
          <p className="mt-4 md:mt-0 text-center md:text-left">Fetched from <a href="/api/movies" target="_blank" className="font-mono text-red-700 underline text-lg">/api/movies<svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 inline mb-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
          </svg></a></p>
        </div>
        <MovieList posterImageBaseURL={posterImageBaseURL} />
        <p>Amplified Push 3</p>
      </Layout>
    </div>
  )
}

export default Home

export async function getStaticProps() {
  const url = process.env.THEMOVIEDB_API_URL + 'configuration?api_key=' + process.env.THEMOVIEDB_API_KEY;
  let imageConfig;
  await fetch(url).then(
    res => {
      return res.json()
    }
  ).then(
    configData => {
      const { base_url, poster_sizes } = configData.images;
      imageConfig = {
        base_url,
        poster_sizes
      }
    }
  );
  return {
    props: {
      imageConfig
    },
  }
}
